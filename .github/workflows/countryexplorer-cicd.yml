name: CountryExplorer CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    # Allow manual trigger

env:
  DOTNET_VERSION: '9.0.x'              # .NET version to use
  NODE_VERSION: '20.x'                 # Node.js version for Angular
  BACKEND_PROJECT_PATH: '.'            # Path to backend solution
  FRONTEND_PROJECT_PATH: './CountryExplorer.UI'  # Path to Angular project
  AZURE_WEBAPP_NAME: 'countryexplorer' # Name of the Azure Web App
  CONFIGURATION: 'Release'             # Build configuration

jobs:
  test-backend:
    runs-on: ubuntu-latest
    name: Backend Tests
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore "${{ env.BACKEND_PROJECT_PATH }}"
    
    - name: Build
      run: dotnet build "${{ env.BACKEND_PROJECT_PATH }}" --configuration ${{ env.CONFIGURATION }} --no-restore
    
    - name: Test
      run: dotnet test "${{ env.BACKEND_PROJECT_PATH }}" --configuration ${{ env.CONFIGURATION }} --no-build --verbosity normal --collect:"XPlat Code Coverage"
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: backend-test-results
        path: '**/TestResults'
  
  test-frontend:
    runs-on: ubuntu-latest
    name: Frontend Tests
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: '${{ env.FRONTEND_PROJECT_PATH }}/package-lock.json'
    
    - name: Install dependencies
      run: |
        cd ${{ env.FRONTEND_PROJECT_PATH }}
        npm ci
    
    - name: Run tests
      run: |
        cd ${{ env.FRONTEND_PROJECT_PATH }}
        npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: frontend-test-results
        path: '${{ env.FRONTEND_PROJECT_PATH }}/coverage'
  
  build:
    runs-on: ubuntu-latest
    needs: [ test-frontend]
    name: Build Applications
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: '${{ env.FRONTEND_PROJECT_PATH }}/package-lock.json'
    
    - name: Build Backend
      run: |
        dotnet restore "${{ env.BACKEND_PROJECT_PATH }}"
        dotnet build "${{ env.BACKEND_PROJECT_PATH }}" --configuration ${{ env.CONFIGURATION }} --no-restore
        dotnet publish "${{ env.BACKEND_PROJECT_PATH }}/CountryExplorer.API" --configuration ${{ env.CONFIGURATION }} --output ./publish/backend --no-build
    
    - name: Build Frontend
      run: |
        cd ${{ env.FRONTEND_PROJECT_PATH }}
        npm ci
        npm run build -- --configuration production
    
    - name: Upload Backend Artifact
      uses: actions/upload-artifact@v3
      with:
        name: backend-artifact
        path: ./publish/backend
    
    - name: Upload Frontend Artifact
      uses: actions/upload-artifact@v3
      with:
        name: frontend-artifact
        path: '${{ env.FRONTEND_PROJECT_PATH }}/dist/country-explorer-ui'
  
  deploy:
    runs-on: ubuntu-latest
    needs: build
    name: Deploy Applications
    if: github.event_name != 'pull_request' # Only deploy on push to main/develop
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'Production' || 'Development' }}
    
    steps:
    - name: Download Backend Artifact
      uses: actions/download-artifact@v3
      with:
        name: backend-artifact
        path: ./backend
    
    - name: Download Frontend Artifact
      uses: actions/download-artifact@v3
      with:
        name: frontend-artifact
        path: ./frontend
    
    # Example deployment to Azure Web App
    - name: Deploy Backend to Azure
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}-api
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_BACKEND }}
        package: ./backend
    
    # Example deployment to Azure Static Web App
    - name: Deploy Frontend to Azure
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: ./frontend
        api_location: ""
        output_location: ""
